local Jugador = game.Players.LocalPlayer
local ServicioJugadores = game:GetService("Players")
local ServicioEnemigos = game:GetService("Workspace").Enemies -- Asume que tus NPCs están en un contenedor llamado "Enemies"

local DistanciaMaxima = 50 -- Puedes ajustar esto según tu preferencia

function EsNPC(objeto)
    return objeto:IsA("Model") and objeto:FindFirstChild("Humanoid") and not ServicioJugadores:GetPlayerFromCharacter(objeto)
end

function ObtenerEnemigosCercanos()
    local enemigosCercanos = {}
    local posicionJugador = Jugador.Character.HumanoidRootPart.Position

    for _, objeto in pairs(ServicioEnemigos:GetChildren()) do
        if EsNPC(objeto) then
            local posicionObjeto = objeto:WaitForChild("HumanoidRootPart").Position
            local distancia = (posicionJugador - posicionObjeto).Magnitude

            if distancia <= DistanciaMaxima then
                table.insert(enemigosCercanos, {Objeto = objeto, Distancia = distancia})
            end
        end
    end

    table.sort(enemigosCercanos, function(a, b) return a.Distancia < b.Distancia end)

    return enemigosCercanos
end

function ApuntarACabeza(objeto)
    local cabezaNPC = objeto:WaitForChild("Head")
    local puntoDeMira = cabezaNPC.Position

    -- Tu código para apuntar a puntoDeMira aquí
    -- Puedes utilizar CFrame para rotar la cámara hacia el puntoDeMira

    print("Apuntando a la cabeza del NPC más cercano")
end

function ActualizarPunteria()
    local enemigosCercanos = ObtenerEnemigosCercanos()

    if #enemigosCercanos > 0 then
        ApuntarACabeza(enemigosCercanos[1].Objeto)
    else
        -- Tu código para manejar la falta de enemigos cercanos
        print("No hay NPCs cercanos")
    end
end

-- Llama a la función ActualizarPunteria cada segundo (puedes ajustar este tiempo)
while wait(1) do
    ActualizarPunteria()
end
